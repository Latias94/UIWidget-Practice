Unity-chan SpringBone マニュアル


■ 概要

Unity-chan SpringBoneはボーンベースのキャラクター揺れものを想定したダイナミクスシステム。
処理負荷のためクロスシミュレーションが使えない場合、ボーン単位での制御がしたい場合などに使います。

このシステムは主に以下のコンポーネントで構成されています。

・SpringManager
一つのキャラクターの揺れもの処理を行うための制御コンポーネント。
一体のキャラクターに一つだけ、ルートオブジェクトなどに追加します。

・SpringBone
一個のボーン（ジョイント）に登録され、そのボーン固有のパラメータを持ちます。
SpringBoneは自分では動かなく、SpringManagerに登録する必要があります。
SpringBoneは子供の位置を先端とし、その先端がダイナミクス計算によって動き、
その位置がボーンの回転に変換されます。
故に、子供のあるボーンにしかSpringBoneを追加できません。
普段同じSpringBoneに複数の子供はつけませんが、
子供が複数ある場合は初期状態の全子供の位置の平均値が先端の位置になります。
（SpringBonePivotが追加されている子供は除外されます。）

ちなみにUnity-chan SpringBoneでは親から子供までのベクトルがそのボーンの
マイナスX軸とするのが普通とされています。

SpringBoneの動きは角度制限と当たり判定によって制限できます。
角度制限の場合は、角度の基準を決める「基点」オブジェクトが必要です。
初期ではそのSpringBoneの親が基点となりますが、例えば
スカートを脚と一緒に動かしたい場合脚のボーンなど、他のオブジェクトを指定できます。

・SpringSphereCollider、SpringCapsuleCollider、SpringPanelCollider
それぞれの球体、カプセル、板のコライダーコンポーネント。
骨に追加し、そのコライダーが影響を与えるSpringBoneに登録します。
※現在SpringBoneにUnityの標準（PhysXベース）Colliderは使用できないのでご了承ください。

・SpringBonePivot
新しく作成した基点オブジェクトに追加されるコンポーネントです。
スプリングボーン窓の「基点作成」ボタンを使うと新規の基点に追加されます。
SpringBoneの基点はどのオブジェクトでも指定可能で、特に何かの処理を行うわけではありませんが、
新規オブジェクトの場合はダイナミクスCSVに登録され、
そのCSVが読み込まれた時にオブジェクトが作成されるというメリットがあります。


■ セットアップ手順

● SpringManagerとSpringBoneのコンポーネント追加

まずセットアップしたいキャラクターをシーンに出します。
そのキャラクターのルートにSpringManagerを追加します。
SpringManagerはInspectorのAdd Component＞Spring Managerでも
スプリングボーン窓の「マネージャーを作成／更新」ボタンでも構いません。

次はダイナミクスで制御したいボーンを全部選択し、
スプリングボーン窓の「スプリングボーン追加」ボタンでSpringBoneコンポーネントを追加します。
SpringBoneコンポーネントを各ボーンに追加し、更にキャラルートのSpringManagerに
そのボーンが階層順（親から子供へ）に登録されます。

SpringBoneは親から子供の順に処理する必要があるため、個別では動きません。
SpringManagerが自分のSpringBonesのリストに登録されているものの順に処理を行います。
リストに入っていないSpringBoneは動きません。

再生ボタンを押しキャラを動かすとダイナミクスが動きます。
初期の値だと重力に負けて全部真下に垂れるはずです。

● 角度制限の設定

体の内側に入ってほしくないSpringBoneに角度制限を付けます。
該当するSpringBoneを選択し、スプリングボーン窓から「基点作成」を押します。
基点のX軸はボーンの方向ベクトルに合わせます。
Z軸は体の外側に向け、Y軸は左右に向けることをお勧めします。
そうすると、Zの角度制限の下限を0にすると体に入らなくなります。

更に基点は任意のボーンの子供にできます。
たとえば前髪の基点は頭ボーンの子供に、
スカートの根本に近いSpringBoneの基点は脚ボーンの子供にすると良いです。

● コリジョンの追加

次は、角度制限では避けきれないところにコリジョン（当たり判定）を付けます。
たとえば脚の子供にカプセルを追加しスカートのSpringBoneにそのカプセルを登録したり、
背骨の子供に板を追加し長い後ろ髪のSpringBoneにその板を登録したりします。

基本的に根本に近いSpringBoneは主に角度制限で制御し、
根本から離れてるSpringBoneはコリジョンで制御しますが、
両方を組み合わせると一番いい結果が得られるかもしれません。

● モーション再生しながら調整

後はキャラクターにモーションを再生しながら、ゆれものの動きを確認しながら、
パラメータを調整します。再生中に調整したSpringBoneのパラメータは
再生後でも残るようになっています。

● データを保存

スプリングボーン窓のダイナミクスCSVの保存ボタンでCSV（テキストファイル）に
書き出し、後で読み直すことが可能です。ボーン名が同じであれば
別キャラにも読み込むことができます。

また、ダイナミクスセットアップ済みのキャラクターをプレハブとして保存するのもお勧めします。


■ まとめ・アドバイスなど

・基点オブジェクトは対象のSpringBoneを追従させたいものの子供にします。
たとえばスカートボーンの基点は脚ボーンの子供に、
胸の飾り等は上の背骨の子供に、など。

・根本に近い（階層的に上の）骨は基点と主に角度制限を、
根本から遠い（下の方の）骨は主にコリジョンを。
ただし両方をうまく組み合わせた方が一番いい結果が出せます。

・コリジョンは角度制限に負けます。
上手く避けていないようでしたら、角度制限の幅が狭すぎないか確認しましょう。

・できるだけ多くのモーションを再生しながら動作を確認しましょう。
思わぬところでSpringBoneが想定外の動きをする可能性があります。

・コリジョンはキャラの見た目より大きめに作りましょう。
脚ぴったりのサイズで作ってもスカートのボーンが思わぬ方向に避けたりしてしまいます。

・スカートは鬼門です。コリジョンだけに頼ってもいい結果にならない可能性が高いので、
前側のボーンの基点をそれぞれ左右の脚の子供にするといいです。
ただし真ん中にボーンがあるとどちらも選べないので、
走ったりしゃがんだりするときは大体下に垂れてめり込んでしまいます。
コリジョンである程度緩和はできますがどちらかに偏ったり、
しゃがんでる時はいい感じでも立つとすごい広がったりなど、かなりの試行錯誤が必要です。
そのために、下記のHighLegコンポーネントを使うと緩和できる可能性があります。


■ SpringManager

一つのキャラクター等の揺れもの処理を行うための制御コンポーネント。

● ボタン

・窓を表示
SpringBone窓を表示します。

・SpringBoneを全て選択
SpringBoneをすべて選択します。

・SpringBoneリストを更新
SpringManager以下のSpringBoneをすべて検出し、Spring Bonesのリストに登録します。

● Properties（一般設定）

・Automatic Updates（自動更新）
（プログラマー用）自動更新を有効にします。最初はオンになっていますが、
スクリプト側でダイナミクス処理のタイミングをコントロールする時はチェックを外し、
SpringManagerのUpdateDynamics()メソッドを手動で呼び出すことが可能です。

・Is Paused（一時停止）
ダイナミクス処理の一時停止。ゲームを一時停止にする際はこちらのチェックも入れると
一時停止中にダイナミクスは動きません。

・Simulation Frame Rate（処理の頻度）
ダイナミクス処理の間隔を制御します。固定の数値にするとダイナミクスの挙動が安定します。
-1にするとTime.deltaTimeと同じ間隔で動きますがフレームレートが変動すると多少暴れる可能性があります。
安定するために60に設定することをお勧めします。

・Dynamic Ratio（ダイナミクス割合）
【実験中】
（プログラマー用）モーションとダイナミクスをブレンドする割合。
ただしモーションで揺れものボーンのモーションをつけることは普段ないので、
SpringManagerのUpdateBoneIsAnimatedStates()メソッドでどの揺れものボーンが
モーションで動くかをそのモーションの再生時などに指定する必要があります。

・Gravity（重力）
全体にかける重力パラメータ。各SpringBoneの重力パラメータにプラスされます。

・Bounce（跳ね）
【実験中】
コリジョンに当たった時の跳ねる割合。（現在実験段階で、本来各ボーンにつけるパラメータになる予定です。）

・Friction（摩擦）
【実験中】
コリジョンに当たった時の摩擦の割合。（現在実験段階で、本来各ボーンにつけるパラメータになる予定です。）

● Constraints（制限機能）

主にデバッグ用。各要素をキャラクター単位で無効化できます。

・Enable Angle Limits
角度制限の有効化。

・Enable Collision
コライダーの有効化。

・Enable Length Limits
距離制限の有効化。

● Ground Collision（地面の当たり判定）

地面の当たり判定は指定した高さの平面になります。
SceneビューのGizmoで足元の四角い枠線として表示されます。
※現在は斜めや縦には出来ません。

・Collide With Ground
地面との当たり判定を取るかどうかです。

・Ground Height
地面の高さ（Y座標）。

● Bones（骨）

・Spring Bones
登録されているSpringBoneのリスト。SpringBone窓や「SpringBoneリストを更新」のボタンを
使っていれば普段これを直接手でいじる必要はありません。

● Gizmos（ギズモ）

各要素のGizmoやHandleの色や角度制限の大きさを指定します。エディターのみで使用されます。

・Bone Color（ボーン色）
SpringBoneが表示される色。

・Collision Color（当たり判定の色）
当たり判定（球体、カプセル、板）が表示される色。

・Ground Collision Color（地面の当たり判定の色）
地面の当たり判定が表示される色。

・Angle Limit Draw Scale（角度制限の描画拡大率）
角度制限の軸が表示される大きさ。


■ SpringBone

・「基点を選択」
基点と指定されたオブジェクトを選択します。

・マネージャー
このSpringBoneが登録されているSpringManagerを表します。読み取り専用。

・有効
このボーンのダイナミクスが有効になっているかどうか。

● 力

・硬さ
骨の硬さ。高ければ高いほど初期の位置に戻ろうとする力。
低いと柔らかいゆれになり、重力などに負けて垂れたりします。
特に決まった上限はありませんが、Inspectorではスライダーは5000で止まります。

・空気抵抗
空気抵抗に当たる値。強ければ強いほど動きがゆっくりなります。
逆に、低いとバネみたいな速い動きになります。
「減衰力」とも言えます。
このパラメータは0~1の幅になります。

・重力
Y軸にマイナス数値を入れると、そのボーン特有の重力になります。
プラスYにすると、逆に浮きます。「この骨はより重力を出したい」という時に使います。

・風の影響値
風の影響値。0だとまったく影響を受けません。
こちらも0~1の幅になります。
1だと100％受けます。
風は下記のWindVolumeにて説明します。

パラメータは複数のSpringBoneを選択し同時に調整することができます。
また、SpringBoneEditorBackgroundTasksスクリプト（下参照）により
再生中に調整しても後で値が残ります。
影響を見ながら調整するには便利です。

● 角度制限

ボーンの動ける範囲を制限します。
ボーンの向いている方向ベクトルはXとされますので、Y軸とZ軸でそれぞれの角度制限を設定できます。

・基点
角度制限は「基点オブジェクト」というオブジェクトの向き（回転）に対してのものとなります。
たとえばスカートの骨を脚の骨より下がらないようにしたい場合は、
それぞれのスカートの基点オブジェクトを脚の骨の子供にするといいです。
（3Dツールでいう「ペアレントコンストレイント」と似たようなものだと考えていただいても構いませんが、
位置は使わず回転だけを基準にしていますしこのSpringBone専用のものですので、
汎用のペアレントコンストレイントにはなりません。）

基点オブジェクトは最初ではそのSpringBoneの親になっていますので、別のオブジェクトの子供にしたり
方向を変えたりしたい場合はスプリングボーン窓の「基点作成」ボタンを押してください。
対象のSpringBoneの新しいSpringBonePivotというコンポーネント付きのGameObjectが作成されいます。
SpringBonePivotに特別な処理は何も入ってませんが、ダイナミクスCSVに保存され、そのCSVを読み込んだ時は
再び作成されるようになります。

・回転の硬さ
角度制限が有効になっている場合、ボーンが0度に戻ろうとする力です。
激しい動きによってボーンがピタっと上限・下限に止まるのではなく、もっとゆっくり止まるための手段です。

・両軸の制限
YとZの各軸の角度制限はチェックボックスで有効化、それぞれの「下限」と「上限」で調整できます。
更にインスペクターでは：
・同時に変更　チェックが入っているとスライダーが同時に動きます。
・下限に統一　上限の値が下限に統一されます。
・上限に統一　下限の値が上限に統一されます。
・反転　　　　上限と下限の値が反転されます。

また、インスペクターの一番下に角度制限が表示されます。
Sceneビューにも表示されます。基点オブジェクトを回すと制限の方向が確認できます。

● 距離制限

【※実験中】
骨が距離を維持しようとするターゲット先を指定します。
たとえばスカートのボーン列の間の距離が伸びすぎないためなどのパラメータでしたが、
暴れがひどかったため、現在はちゃんと機能していないので使わないことを推奨します。

● 当たり判定

SpringBoneのコリジョン設定。各SpringBone自身のコリジョンは球体となります。
相手のコライダーは球体・カプセル・板の３種類があります。

・半径
SpringBoneのコリジョン球体の半径。

・球体・カプセル・板
その骨が衝突処理を行うそれぞれのコライダー。

● 角度制限の表示
Inspectorの一番下に角度制限が表示されます。
左はY軸で右はZ軸。
色付きの矢印は下限と上限を表します。
グレーの矢印（真下）は0度です。
再生中は白い矢印が骨の現在の向きを表します。

● 標準インスペクター表示
念のため、従来のInspectorを表示するためのチェックボックス。


■ コライダーの種類

コライダーはスプリングボーン窓のコリジョンのところの各コライダーボタンで作成できます。
コライダーはその種類のコンポーネント付きのGameObjectが選択の子供として作成されます。
また、各コライダーには「LinkedRenderer」というパラメータがあります。
これが指定されている場合は、そのRendererが無効になっているとき、コライダーも無効になります。
たとえば、モーションによって剣の鞘が非表示になったりする場合、そのコリジョンを同時に無効化できます。

● 球体（SpringSphereCollider）
・Radius　球体の半径
使用例：頭、腰など
（ただし前髪、根本の髪の毛等はコリジョンより角度制限の方が安定します。）

● カプセル（SpringCapsuleCollider）
カプセルは自分のY軸を方向にHeightパラメータによって伸びたり縮んだりします。
また、スプリングボーン窓の「カプセル」ボタンで作成しますと、その親ボーンと子供の間に
長さと方向を合わせようとします。
・Radius　半径
・Height　高さ（長さ）
使用例：腕、足、胴など

● 板（SpringPanelCollider）
板は横と縦の幅があり、自分のZ軸を上の法線ベクトルとします。
当たったSpringBoneは必ず板の前側（板のローカル＋Ｚ）に避けようとします。
SpringBoneは板の裏には絶対に移動しないようにします。

板の端はSpringBoneの挙動が多少不安定（暴れ）になりますので、対象のSpringBoneの
動く範囲より板の幅を広くすることをお勧めします。
・Width 　横幅
・Height　縦幅
使用例：長い後ろ髪、ポニーテール、マントなどが背中を突き抜けないように主に使います。


■ 拡張系のコンポーネント

● HighLeg 
スカートの真ん中のボーンを脚より下げないようにしたいけど、
真ん中なので左右のどちらにもならない時のためのコンポーネントです。
まずはEmptyオブジェクトを作り、そいつにHighLegのコンポーネントを追加します。
HighLegに腰と両脚の両端の骨を指定し、腰に対しより上に上がっている方の脚を自分の回転にします。
それ（あるいはそれの子供オブジェクト）を真ん中の骨の
基点にするとどちらの脚が上がっていても綺麗に避けてくれます。
ダイナミクスCSVにこれの情報が保存されます。

・hipPivot
腰のボーンを指定します。
・legs
脚のボーンを指定します。それぞれの脚の親（start）と子供（end）を指定する必要があります。


■ 外から力を与える

外からSpringBoneに力を与えることも可能です。
シーン内のForceProviderの子クラスになっているものは検出され、
各SpringBoneに力を与えます。独自な処理で何かの力を与えたい時は
ForceProviderから継承しGetForceOnBoneメソッドを実装してください。

サンプルには二つのクラスを用意しています。

● ForceVolume
固定の力を全SpringBoneに与えます。

● WindVolume
仮の風のような力を波のようにSpringBoneに与えます。
SpringBoneの位置により影響が変化します。
風の方向は追加されているtransformの向きになります。
実験中のもので最適化などはされていません。

また、SpringBoneの「風の影響値」のパラメータはここで使われます。
影響値が1の場合は風の影響を100％受け、0の場合はまったく風の影響を受けません。

・weight
0～1の間のウェイト値。下記のstrengthパラメータに乗算されます。
・strength
風全体の強さ。
・amplitude
風が向きに対して外側に広がる距離。
・period
現在影響はありませんが0にすると風が動かなくなります。
・spinPeriod
風の回転間隔を指定します。秒単位です。spinPeriodの間に風が一回転します。
回転中にamplitudeにより風の広がる方向が変わります（回転します）。
・peakDistance
SpringBoneの位置によって風の強さが変わります。
その一番強いところ同士の距離を指定します。


■ 再生終了の際のパラメータ保存について

動きを確認しながらパラメータを調整し、再生が終わっても調整したままの数値を保持するのは
セットアップする時は望ましいので、SpringBoneEditorBackgroundTasksというクラスで
再生終了の際に各SpringBoneのパラメータを保持するようにしています。
そうしたくない場合はSpringBoneEditorBackgroundTasks.csファイルを削除し、または
PlaymodeStateChangedの関数で保持する条件を修正してください。
（たとえば、セットアップ専用のシーンのみで保持するように、など）
